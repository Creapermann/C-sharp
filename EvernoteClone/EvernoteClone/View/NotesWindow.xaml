<Window x:Class="EvernoteClone.View.NotesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:EvernoteClone.View"
        xmlns:uc="clr-namespace:EvernoteClone.View.UserControls"
        mc:Ignorable="d"
        xmlns:vm="clr-namespace:EvernoteClone.ViewModel"
        
        Icon="Notes.ico"
        WindowStartupLocation="CenterScreen"
        Title="Notes" 
        Height="600" 
        Width="800">

    <Window.Resources>
        <vm:NotesVM x:Key="vm"/>

    </Window.Resources>

    <DockPanel DataContext="{StaticResource vm}">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="New Notebook"
                          Command="{Binding NewNotebookCommand}"/>
                <MenuItem Header="New note"
                          Command="{Binding NewNoteCommand}"
                          CommandParameter="{Binding SelectedNotebook}"/>
                <Separator/>
                <MenuItem Header="Exit"
                          Click="ExitButton_Click"/>
            </MenuItem>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock x:Name="statusTextBlock"/>
            </StatusBarItem>
        </StatusBar>

        <ListView DockPanel.Dock="Left"
                  ItemsSource="{Binding Notebooks}"
                  SelectedValue="{Binding SelectedNotebook, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Width="140">

            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        
                        <uc:NotebookControl Notebook="{Binding}">
                            <uc:NotebookControl.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Rename"
                                              Command="{Binding Source={StaticResource vm}, Path=RenameCommand}"
                                              CommandParameter="{Binding}"/>
                                    <MenuItem Header="Delete"
                                              Command="{Binding Source={StaticResource vm}, Path=DeleteCommand}"
                                              CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </uc:NotebookControl.ContextMenu>
                        </uc:NotebookControl>
                        
                        
                        <!-- To Use this event as Command, i m using the mictosoft.xaml.behaviour package   Episode. 102 "Udemy WPF masterclass"-->
                        <TextBox Text="{Binding Name}"
                                 Visibility="{Binding Source={StaticResource vm}, Path=RenameNotebookTextBoxVisibility}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding Source={StaticResource vm}, Path=EndRenamingCommand}"
                                                           CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>

        </ListView>

        <ListView DockPanel.Dock="Left"
                  ItemsSource="{Binding Notes}"
                  Width="140"
                  SelectedValue="{Binding SelectedNote, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <uc:NoteControl Note="{Binding}">
                            <uc:NoteControl.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Rename"
                                              Command="{Binding Source={StaticResource vm}, Path=RenameCommand}"
                                              CommandParameter="{Binding}"/>
                                    <MenuItem Header="Delete"
                                              Command="{Binding Source={StaticResource vm}, Path=DeleteCommand}"
                                              CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </uc:NoteControl.ContextMenu>
                        </uc:NoteControl>

                        <TextBox Text="{Binding Title}"
                                 Visibility="{Binding Source={StaticResource vm}, Path=RenameNoteTextBoxVisibility}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding Source={StaticResource vm}, Path=EndRenamingCommand}"
                                                           CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        
        

        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <ToggleButton x:Name="speechButton"
                        Content="Speech"
                        Click="speechButton_ClickAsync"/>
                
                <ToggleButton x:Name="boldButton"
                        Click="boldButton_Click">
                    <TextBlock Text="B"
                               FontWeight="Bold"/>
                </ToggleButton>

                <ToggleButton x:Name="italicButton"
                        Click="italicButton_Click">
                    <TextBlock Text="I"
                               FontStyle="Italic"/>
                </ToggleButton>

                <ToggleButton x:Name="underlineButton"
                              Click="underlineButton_Click">
                    <TextBlock Text="U"
                               TextDecorations="Underline"/>
                </ToggleButton>

                
                <ComboBox x:Name="fontFamilyComboBox"
                          Width="100"
                          SelectionChanged="fontFamilyComboBox_SelectionChanged"/>

                <ComboBox x:Name="fontSizeComboBox"
                          Width="50"
                          IsEditable="True"
                          TextBoxBase.TextChanged="fontSizeComboBox_TextChanged"/>

                <Button Content="Save"
                        Click="saveButton_Click"/>
            </ToolBar>
        </ToolBarTray>

        <Grid>
            <TextBox x:Name="a"/>
            <RichTextBox x:Name="contentRichTextbox"
                         TextChanged="contentRichTextbox_TextChanged"
                         Block.LineHeight="1"
                         SelectionChanged="contentRichTextbox_SelectionChanged"/>
        </Grid>

    </DockPanel>
</Window>